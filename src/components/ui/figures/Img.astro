---
export interface ThemedImage {
  src: string;
  darkSrc?: string;
  alt: string;
  width?: number;
  height?: number;
  sizes?: string;
  class?: string;
}

interface Props {
  image: ThemedImage;
  caption?: string;
  capId?: string;
  baseClasses?: string;
  rounded?: boolean;
  shadow?: boolean;
}

const {
  image,
  caption,
  capId,
  baseClasses = "",
  rounded = true,
  shadow = true,
} = Astro.props;

const resolvedCapId = capId ?? crypto.randomUUID();

const imgBaseClasses = [
  "w-full h-auto object-cover",
  rounded ? "rounded-2xl" : "",
  shadow ? "shadow-md" : "",
  baseClasses,
  image.class ?? ""
].filter(Boolean).join(" ");
---

<figure class="my-6 flex flex-col items-center text-center">
  <div>
    <img
      src={image.src}
      alt={image.alt}
      width={image.width}
      height={image.height}
      sizes={image.sizes}
      loading="lazy"
      decoding="async"
      class={`${imgBaseClasses} dark:hidden`}
      aria-describedby={resolvedCapId}
    />
    {image.darkSrc && (
      <img
        src={image.darkSrc}
        alt={image.alt}
        width={image.width}
        height={image.height}
        sizes={image.sizes}
        loading="lazy"
        decoding="async"
        class={`${imgBaseClasses} hidden dark:block`}
        aria-describedby={resolvedCapId}
      />
    )}
  </div>

  <figcaption
    id={resolvedCapId}
    class="mt-3 max-w-prose text-sm leading-relaxed text-zinc-600 dark:text-zinc-400"
  >
    <slot name="caption">
      {caption && <span set:html={caption} />}
    </slot>
  </figcaption>
</figure>
