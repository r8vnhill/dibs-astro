---
import type { ShikiTransformer } from "shiki";
import CodeLayout, { type CodeProps } from "./CodeLayout.astro";

type CodeBlockProps = {
  filename?: string;
  transformers?: ShikiTransformer[];
} & CodeProps;

const {
  code,
  lang = "text",
  class: className = "",
  title,
  filename,
  icon: Icon,
  transformers = [],
} = Astro.props as CodeBlockProps;

const classes = ["bg-surface-50", "dark:bg-surface-800"];

// Build aria-label if we have a title or filename
let ariaLabel = "";
if (title) {
  ariaLabel = title + (filename ? ` â€“ ${filename}` : "");
} else if (filename) {
  ariaLabel = filename;
}
---

<CodeLayout
  class:list={[...classes, className]}
  icon={Icon}
  source={filename}
  code={code}
  lang={lang}
  transformers={transformers}
  {...ariaLabel ? { "aria-label": ariaLabel } : {}}
  {...title ? { title } : {}}
>
  {
    Astro.slots.title && (
      <div slot="title">
        <slot name="title" />
      </div>
    )
  }
  {
    Astro.slots.source && (
      <div slot="source">
        <slot name="source" />
      </div>
    )
  }
</CodeLayout>
