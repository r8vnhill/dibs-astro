---
import CalloutHeading from "./CalloutHeading.astro";
import type { BaseCalloutProps } from "./shared";
import * as icons from "~/assets/img/icons";

type SolutionProps = BaseCalloutProps;

const {
  title = "Soluci√≥n",
  icon: Icon = icons.CheckCircle,
  headingLevel = "h3",
  headingId,
  class: className = "",
  headingClass = "",
  iconClass = "",
  ariaLabel,
  compact = false,
  prose = true,
  ...rest
} = Astro.props as SolutionProps & Record<string, any>;

const resolvedHeadingId = headingId ?? `solution-${crypto.randomUUID()}`;

const passthrough = Object.fromEntries(
  Object.entries(rest).filter(
    ([k]) =>
      ["id"].includes(k) || k.startsWith("data-") || k.startsWith("aria-")
  )
);
---

<section
  class:list={[
    "solution relative rounded-md shadow-sm",
    compact ? "px-4 py-3" : "px-5 py-4",
    className,
  ]}
  style={{
    "--callout-title-color": "var(--solution__title-color)",
    "--callout-icon-color": "var(--solution__title-color)",
  }}
  role="region"
  aria-labelledby={resolvedHeadingId}
  {...ariaLabel ? { "aria-label": ariaLabel } : {}}
  {...passthrough}
>
  <details class="group [&[open]]:pb-1.5">
    <summary
      class="cursor-pointer list-none flex items-center justify-between gap-2 font-semibold text-[var(--callout-title-color)]"
      id={resolvedHeadingId}
    >
      <CalloutHeading
        Icon={Icon}
        heading={title}
        headingLevel={headingLevel}
        headingId={resolvedHeadingId}
        class={`solution__title ${headingClass}`}
        iconClass={`solution__icon ${iconClass}`}
      >
        <slot name="title">{title}</slot>
      </CalloutHeading>
      <span
        class="ml-auto transition-transform duration-200 group-open:rotate-180"
      >
        <icons.CaretDown class="w-5 h-5 text-[var(--callout-title-color)]" />
      </span>
    </summary>

    <div
      class:list={[
        "solution__body mt-3",
        prose &&
          "prose prose-neutral dark:prose-invert max-w-none prose-p:my-0 prose-p:leading-relaxed",
      ]}
    >
      <slot />
    </div>
  </details>
</section>

<style scoped>
  .solution {
    background-color: var(--solution__bg-color);
    border-left: 4px solid var(--solution__border-color);
    margin-top: 1rem;
  }

  :global([data-theme="dark"]) :where(.solution) {
    background-color: var(--solution__bg-color-dark);
    border-left-color: var(--solution__border-color-dark);
  }

  .solution__body :where(p:first-child) {
    margin-top: 0;
  }

  .solution__body :where(p:last-child) {
    margin-bottom: 0;
  }
</style>
