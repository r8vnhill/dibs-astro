---
/**
 * TabsList.astro â€“ Starwind Tabs trigger list.
 * --------------------------------------------
 * This component renders the tab trigger container (the clickable tabs).
 * It supports styling via Tailwind Variants and provides accessibility via `role="tablist"` and the
 * `data-tabs-list` attribute.
 */

import type { HTMLAttributes } from "astro/types";
import { tv } from "tailwind-variants";

/**
 * Props for the TabsList component.
 * `role` is omitted because it is hardcoded to "tablist".
 */
type Props = Omit<HTMLAttributes<"div">, "role">;

/**
 * Tailwind Variants definition for the tabs list.
 * Allows further extension if variants are added in the future.
 */
const tabsList = tv({
  base: "inline-flex w-full items-center justify-center rounded-md bg-muted p-1 text-muted-foreground gap-1",
  variants: {
    size: {
      sm: "text-sm gap-1",
      md: "text-base gap-1.5",
      lg: "text-lg gap-2",
    },
    orientation: {
      horizontal: "flex-row",
      vertical: "flex-col",
    },
  },
  defaultVariants: {
    size: "md",
    orientation: "horizontal",
  },
});

// Extract props
const {
  class: className,
  "aria-orientation": ariaOrientation = "horizontal",
  ...rest
} = Astro.props;
---

<!--
  Container for the tab triggers.
  `data-tabs-list` allows the controller to register and manage the tab order.
-->
<div
  class={tabsList({
    class: className,
    orientation: ariaOrientation ?? undefined,
  })}
  data-tabs-list
  role="tablist"
  aria-orientation={ariaOrientation}
  {...rest}
>
  <slot />
</div>
