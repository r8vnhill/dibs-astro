---
import * as icons from "~/assets/img/icons";
import TableFloat from "~/components/floats/TableFloat.astro";
import Heading from "~/components/semantics/Heading.astro";
import {
  Tabs,
  TabsContent,
  TabsList,
  TabsTrigger,
} from "~/components/starwind/tabs";
import { Explanation } from "~/components/ui/callouts";
import Abstract from "~/components/ui/callouts/Abstract.astro";
import Info from "~/components/ui/callouts/Info.astro";
import More from "~/components/ui/callouts/More.astro";
import Note from "~/components/ui/callouts/Note.astro";
import Tip from "~/components/ui/callouts/Tip.astro";
import Warning from "~/components/ui/callouts/Warning.astro";
import {
  BashScript,
  InlineBash,
  InlinePowerShell,
  PowerShellBlock,
} from "~/components/ui/code";
import CodeBlock from "~/components/ui/code/CodeBlock.astro";
import InlineCode from "~/components/ui/code/InlineCode.astro";
import ShellBlock from "~/components/ui/code/ShellBlock.astro";
import { Link } from "~/components/ui/links";
import List from "~/components/ui/list/List.astro";
import ListItem from "~/components/ui/list/ListItem.astro";
import ToDo from "~/components/utils/ToDo";
import DevEnv from "~/content/installation/DevEnv.astro";
import JDK21Note from "~/content/installation/JDK21Note.astro";
import CommunityVsUltimate from "~/fragments/notes/installation/CommunityVsUltimate.astro";
import IntelliJCommunityNote from "~/fragments/notes/installation/IntelliJCommunityNote.astro";
import StudentPack from "~/fragments/notes/installation/StudentPack.astro";
import NotesLayout from "~/layouts/NotesLayout.astro";
import NotesSection from "~/layouts/NotesSection.astro";
---

<NotesLayout
  title="Herramientas necesarias y recomendadas"
  timeMultiplier={2.5}
>
  <Abstract>
    <p>
      Antes de comenzar a construir bibliotecas de software, necesitamos
      preparar nuestro entorno de trabajo. Estas herramientas serán tu base para
      escribir código con confianza, colaborar de forma efectiva, automatizar
      tareas y concentrarte en lo esencial: diseñar soluciones elegantes y
      funcionales.
    </p>
    <p>
      Esta sección te guiará para dejar todo listo en tu sistema operativo
      favorito. Algunas herramientas son <strong>imprescindibles</strong>,
      mientras que otras son <strong>opcionales pero recomendadas</strong> para mejorar
      tu experiencia y agilizar tu flujo de trabajo.
    </p>
  </Abstract>

  <NotesSection id="essential-tools">
    <Heading Icon={icons.GearSix} headingLevel="h2" slot="heading">
      Herramientas esenciales
    </Heading>

    <List>
      <ListItem icon={icons.GitBranch}>
        <Link href="https://git-scm.com/">Git</Link>: Sistema de control de
        versiones para gestionar cambios y colaborar en equipo.
      </ListItem>

      <ListItem icon={icons.BracketsCurly}>
        <Link href="https://openjdk.org/">Java Development Kit (JDK)</Link>:
        Entorno requerido para ejecutar Kotlin. Se recomienda la versión 21
        (LTS) o superior.
      </ListItem>

      <ListItem icon={icons.Lightning}>
        <Link href="https://kotlinlang.org/">Kotlin</Link>: Lenguaje de
        programación principal del curso.
      </ListItem>

      <ListItem icon={icons.Package}>
        <Link href="https://gradle.org/">Gradle</Link>: Herramienta para
        compilar proyectos y gestionar dependencias.
      </ListItem>

      <ListItem icon={icons.Terminal}>
        <Link href="https://learn.microsoft.com/en-us/powershell/"
          >PowerShell</Link
        >: Lenguaje de scripting y shell multiplataforma que usaremos para
        automatizar tareas y unificar ejemplos en todos los sistemas operativos.
      </ListItem>
    </List>
  </NotesSection>

  <NotesSection id="recommended-tools">
    <Heading Icon={icons.Toolbox} headingLevel="h2" slot="heading">
      Herramientas adicionales recomendadas
    </Heading>

    <List>
      <ListItem icon={icons.MonitorPlay}>
        <Link href="https://www.jetbrains.com/idea/">IntelliJ IDEA</Link>:
        Entorno de desarrollo más completo y recomendado para Kotlin.
      </ListItem>

      <ListItem icon={icons.Code}>
        <Link href="https://code.visualstudio.com/">Visual Studio Code</Link>:
        Editor ligero, extensible y multiplataforma. Útil si prefieres algo más
        liviano que IntelliJ.
      </ListItem>

      <ListItem icon={icons.GitlabLogo}>
        <Link href="https://gitlab.com/gitlab-org/cli">GitLab CLI</Link>:
        Interfaz de línea de comandos para interactuar con GitLab directamente
        desde la terminal, sin depender del navegador.
      </ListItem>

      <ListItem icon={icons.Sparkle}>
        <Link href="https://ohmyposh.dev/">Oh My Posh</Link>: Personalizador de
        PowerShell que mejora la apariencia y la productividad.
      </ListItem>

      <ListItem icon={icons.TerminalWindow}>
        <Link href="https://apps.microsoft.com/detail/9n0dx20hk701"
          >Windows Terminal</Link
        >: Terminal moderna para Windows que soporta múltiples pestañas y shells
        (incluyendo PowerShell).
      </ListItem>
    </List>
  </NotesSection>

  <NotesSection id="installation-guide">
    <Heading Icon={icons.Wrench} headingLevel="h2" slot="heading">
      Guía de instalación y configuración
    </Heading>

    <p>
      En esta sección encontrarás los pasos para instalar las herramientas
      necesarias en tu sistema operativo y personalizar tu entorno de
      desarrollo.
    </p>
    <p class="mb-4">
      Si alguna instrucción no funciona o surge un problema, consulta la
      documentación oficial de la herramienta o abre un <em>issue</em> en el
      <Link href="https://gitlab.com/r8vnhill/dibs-astro/-/issues"
        >repositorio del curso</Link
      >. Estaremos atentos para ayudarte.
    </p>

    <Tabs defaultValue="windows">
      <TabsList>
        <TabsTrigger value="windows">Windows</TabsTrigger>
        <TabsTrigger value="linux">Linux</TabsTrigger>
        <TabsTrigger value="macos">macOS</TabsTrigger>
      </TabsList>

      <TabsContent value="windows">
        <NotesSection id="installation-windows">
          <Heading Icon={icons.WindowsLogo} headingLevel="h3">
            Instalación en Windows
          </Heading>

          <NotesSection id="scoop-installation">
            <Heading Icon={icons.DownloadSimple} headingLevel="h4">
              Instalar Scoop (gestor de paquetes)
            </Heading>

            <p>
              <strong>Scoop</strong> es el gestor de paquetes recomendado en Windows.
              Permite instalar aplicaciones de línea de comando y gráficas de forma
              sencilla desde PowerShell. Más detalles en su
              <Link href="https://scoop.sh/">sitio oficial</Link>.
            </p>

            <PowerShellBlock
              code={`
            Set-ExecutionPolicy -ExecutionPolicy RemoteSigned -Scope CurrentUser
            Invoke-RestMethod -Uri https://get.scoop.sh | Invoke-Expression
          `}
            >
              <Fragment slot="title">Instalar Scoop</Fragment>
            </PowerShellBlock>

            <PowerShellBlock code="scoop --version">
              <Fragment slot="title">Verificar instalación</Fragment>
            </PowerShellBlock>
          </NotesSection>

          <NotesSection id="tools-installation-windows">
            <Heading Icon={icons.Hammer} headingLevel="h4">
              Instalar herramientas
            </Heading>

            <p>
              Con <strong>Scoop</strong> puedes instalar todas las herramientas necesarias
              para el curso: Git, GitLab CLI, JDK 21, Gradle, IntelliJ IDEA y Visual
              Studio Code.
            </p>

            <CommunityVsUltimate />

            <Tabs defaultValue="community">
              <TabsList>
                <TabsTrigger value="community"
                  >IntelliJ IDEA Community</TabsTrigger
                >
                <TabsTrigger value="ultimate"
                  >IntelliJ IDEA Ultimate</TabsTrigger
                >
              </TabsList>

              <TabsContent value="community">
                <PowerShellBlock
                  code={`scoop install git glab openjdk21 gradle idea vscode`}
                >
                  <Fragment slot="title"
                    >Instalar herramientas esenciales (Community)</Fragment
                  >
                </PowerShellBlock>
                <IntelliJCommunityNote />
              </TabsContent>

              <TabsContent value="ultimate">
                <PowerShellBlock
                  code={`scoop install git glab openjdk21 gradle idea-ultimate vscode`}
                >
                  <Fragment slot="title"
                    >Instalar herramientas esenciales (Ultimate)</Fragment
                  >
                </PowerShellBlock>
                <StudentPack />
              </TabsContent>
            </Tabs>
          </NotesSection>
        </NotesSection>
      </TabsContent>

      <TabsContent value="linux"> ... </TabsContent>

      <TabsContent value="macos"> ... </TabsContent>
    </Tabs>

    <!-- macOS -->
    <NotesSection id="installation-macos">
      <Heading Icon={icons.AppleLogo} headingLevel="h3">
        Instalación en macOS
      </Heading>

      <NotesSection id="homebrew-installation">
        <Heading Icon={icons.DownloadSimple} headingLevel="h4">
          Instalar Homebrew (gestor de paquetes)
        </Heading>

        <p>
          En <strong>macOS</strong>, <strong>Homebrew</strong> es el gestor de paquetes
          recomendado. Permite instalar tanto herramientas de línea de comando como
          aplicaciones gráficas con una sintaxis sencilla.
        </p>

        <BashScript
          code={`/bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"`}
        >
          <Fragment slot="title">Instalar Homebrew</Fragment>
        </BashScript>

        <BashScript code="brew --version">
          <Fragment slot="title">Verificar instalación</Fragment>
        </BashScript>
      </NotesSection>

      <NotesSection id="tools-installation-macos">
        <Heading Icon={icons.Hammer} headingLevel="h4">
          Instalar herramientas
        </Heading>

        <p>
          Con <strong>Homebrew</strong> puedes instalar todas las herramientas necesarias
          para el curso: Git, GitLab CLI, JDK 21, Gradle, IntelliJ IDEA, PowerShell
          y Visual Studio Code.
        </p>

        <CommunityVsUltimate />

        <Tabs defaultValue="community">
          <TabsList>
            <TabsTrigger value="community">IntelliJ IDEA Community</TabsTrigger>
            <TabsTrigger value="ultimate">IntelliJ IDEA Ultimate</TabsTrigger>
          </TabsList>

          <TabsContent value="community">
            <BashScript
              code={`
                brew install git glab openjdk@21 gradle
                brew install --cask intellij-idea-ce powershell visual-studio-code`}
            >
              <Fragment slot="title"
                >Instalar herramientas esenciales (Community)</Fragment
              >
            </BashScript>
            <IntelliJCommunityNote />
          </TabsContent>

          <TabsContent value="ultimate">
            <BashScript
              code={`
                brew install git glab openjdk@21 gradle
                brew install --cask intellij-idea powershell visual-studio-code
              `}
            >
              <Fragment slot="title"
                >Instalar herramientas esenciales (Ultimate)</Fragment
              >
            </BashScript>
            <StudentPack />
          </TabsContent>
        </Tabs>

        <Info>
          <slot slot="title">Sobre <InlineBash code="--cask" /></slot>

          La opción <InlineBash code="--cask" /> instala aplicaciones gráficas (como
          IntelliJ o VS Code).
        </Info>

        <JDK21Note />
      </NotesSection>
    </NotesSection>

    <!-- Linux -->
    <NotesSection id="installation-linux">
      <Heading Icon={icons.LinuxLogo} headingLevel="h3">
        Instalación en Linux
      </Heading>

      <NotesSection id="nix-installation">
        <Heading Icon={icons.DownloadSimple} headingLevel="h4">
          Instalar Nix (gestor de paquetes)
        </Heading>

        <p>
          <Link href="https://nixos.org">Nix</Link> nos permite usar las mismas instrucciones
          en distintas distribuciones de Linux (Debian/Ubuntu, Fedora, Arch, openSUSE,
          etc.) para instalar todas las herramientas del curso.
        </p>

        <BashScript
          code={`sh <(curl --proto '=https' --tlsv1.2 -L https://nixos.org/nix/install) --daemon`}
        >
          <Fragment slot="title">Instalar Nix (multiusuario)</Fragment>
        </BashScript>

        <BashScript
          code={`
            . /nix/var/nix/profiles/default/etc/profile.d/nix-daemon.sh
            nix --version
          `}
        >
          <Fragment slot="title">Configurar sesión y verificar</Fragment>
        </BashScript>
      </NotesSection>

      <NotesSection id="tools-installation-linux">
        <Heading Icon={icons.Hammer} headingLevel="h4">
          Instalar herramientas
        </Heading>

        <p>
          Con <strong>Nix</strong> puedes instalar todas las herramientas necesarias
          para el curso: Git, GitLab CLI, JDK 21, Gradle, IntelliJ IDEA, PowerShell
          y Visual Studio Code.
        </p>

        <BashScript
          code={`
            mkdir -p ~/.config/nix ~/.config/nixpkgs
            grep -qs 'experimental-features' ~/.config/nix/nix.conf \\
              || echo 'experimental-features = nix-command flakes' >> ~/.config/nix/nix.conf
            [ -f ~/.config/nixpkgs/config.nix ] \\
              || printf '%s\\n' '{ allowUnfree = true; }' > ~/.config/nixpkgs/config.nix
          `}
        >
          <Fragment slot="title"
            >Habilitar características y paquetes unfree</Fragment
          >
        </BashScript>

        <CommunityVsUltimate />

        <Tabs defaultValue="community">
          <TabsList>
            <TabsTrigger value="community">IntelliJ IDEA Community</TabsTrigger>
            <TabsTrigger value="ultimate">IntelliJ IDEA Ultimate</TabsTrigger>
          </TabsList>

          <TabsContent value="community">
            <BashScript
              code={`
                NIXPKGS_ALLOW_UNFREE=1 nix profile add --impure \\
                nixpkgs#git \\
                nixpkgs#glab \\
                nixpkgs#openjdk21 \\
                nixpkgs#gradle \\
                nixpkgs#powershell \\
                nixpkgs#jetbrains.idea-community \\
                nixpkgs#vscode
              `}
            >
              <Fragment slot="title"
                >Instalar herramientas esenciales (Community)</Fragment
              >
            </BashScript>
            <IntelliJCommunityNote />
          </TabsContent>

          <TabsContent value="ultimate">
            <BashScript
              code={`
                NIXPKGS_ALLOW_UNFREE=1 nix profile add --impure \\
                nixpkgs#git \\
                nixpkgs#glab \\
                nixpkgs#openjdk21 \\
                nixpkgs#gradle \\
                nixpkgs#powershell \\
                nixpkgs#jetbrains.idea-ultimate \\
                nixpkgs#vscode
              `}
            >
              <Fragment slot="title"
                >Instalar herramientas esenciales (Ultimate)</Fragment
              >
            </BashScript>
            <StudentPack />
          </TabsContent>
        </Tabs>

        <JDK21Note />
      </NotesSection>
    </NotesSection>

    <!-- Verificación final -->
    <NotesSection id="final-verification">
      <Heading Icon={icons.CheckCircle} headingLevel="h3">
        Verificación final del entorno
      </Heading>

      <p>
        Asegúrate de que todas las herramientas necesarias están correctamente
        instaladas ejecutando el siguiente comando:
      </p>

      <ShellBlock
        lang="bash"
        code={`git --version && glab --version && java -version && gradle -v`}
        title="Verificación del entorno"
        icon={icons.TerminalWindow}
      />

      <p>
        Si el comando se ejecuta sin errores, ¡felicitaciones! Tu entorno de
        desarrollo está listo para comenzar a trabajar en el curso.
      </p>
    </NotesSection>
  </NotesSection>

  <NotesSection id="terminal-improvements">
    <Heading Icon={icons.TerminalWindow} headingLevel="h2" slot="heading">
      Personalizar la terminal
    </Heading>

    <p>
      Windows incluye una terminal básica, pero puedes mejorar tu experiencia
      instalando <strong>Windows Terminal</strong> y añadiendo personalización con
      <Link href="https://ohmyposh.dev/">Oh My Posh</Link>.
    </p>

    <List>
      <ListItem icon={icons.Storefront}>
        Descarga <strong>Windows Terminal</strong> desde la
        <Link
          href="https://www.microsoft.com/es-mx/p/windows-terminal/9n0dx20hk701"
        >
          Microsoft Store
        </Link>.
      </ListItem>
      <ListItem icon={icons.Sparkle}>
        <strong>Opcional:</strong> añade estilos y funcionalidades adicionales con
        <Link href="https://ohmyposh.dev/">Oh My Posh</Link>.
      </ListItem>
    </List>

    <PowerShellBlock
      code={`
            # Instalar Oh My Posh con Scoop
            scoop install oh-my-posh
            # Inicializarlo en PowerShell
            oh-my-posh init pwsh | Invoke-Expression
          `}
    >
      <Fragment slot="title">Instalación de Oh My Posh</Fragment>
    </PowerShellBlock>

    <More title="Configuración avanzada">
      <p>
        Para una mejor experiencia visual, te recomendamos
        <Link href="https://ohmyposh.dev/docs/installation/fonts">
          instalar una fuente compatible
        </Link> con símbolos y ligaduras, como Fira Code.
      </p>

      <PowerShellBlock code={`oh-my-posh font install FiraCode`}>
        <Fragment slot="title">Instalar Fira Code</Fragment>
      </PowerShellBlock>

      <p>
        Luego, configura tu terminal para usar la nueva fuente. Consulta la
        <Link href="https://ohmyposh.dev/docs/installation/fonts#configuration">
          guía de configuración
        </Link>.
      </p>

      <p>
        También puedes elegir un tema visual desde la
        <Link href="https://ohmyposh.dev/docs/themes">
          galería de temas disponibles
        </Link>. Para que se aplique automáticamente al abrir PowerShell, edita
        tu perfil:
      </p>

      <PowerShellBlock
        code={`
              # Crear el perfil si no existe
              if (-not Test-Path $PROFILE) {
                  New-Item -Type File -Path $PROFILE -Force
              }

              # Abrir el perfil en VS Code si está instalado, si no usar notepad
              if (Get-Command code-insiders -ErrorAction SilentlyContinue) {
                  code-insiders $PROFILE
              } elseif (Get-Command code -ErrorAction SilentlyContinue) {
                  code $PROFILE
              } else {
                  notepad $PROFILE
              }
            `}
      >
        <Fragment slot="title">Editar perfil de PowerShell</Fragment>
      </PowerShellBlock>

      <Explanation>
        <p>
          En PowerShell, el <strong>perfil</strong> es un archivo de configuración
          que se ejecuta automáticamente cada vez que abres la terminal. Allí puedes
          agregar comandos o configuraciones que quieras tener siempre activas (por
          ejemplo, inicializar <code>Oh My Posh</code> con tu tema favorito).
        </p>

        <p>
          La variable <InlinePowerShell code="$PROFILE" /> apunta a la ruta de ese
          archivo en tu sistema. Si el archivo aún no existe, el script lo crea automáticamente.
        </p>

        <List>
          <ListItem icon={icons.File}>
            <strong>Crear el archivo:</strong> si <InlineCode
              code="$PROFILE"
              lang="powershell"
            /> no existe, se genera con <InlineCode
              code="New-Item -Force"
              lang="powershell"
            />.
          </ListItem>
          <ListItem icon={icons.MagnifyingGlass}>
            <strong>Elegir editor:</strong> el script busca primero <em
              >VS Code Insiders</em
            >, luego <em>VS Code</em>, y si no encuentra ninguno, abre el perfil
            con <em>Notepad</em>.
          </ListItem>
          <ListItem icon={icons.PencilSimple}>
            <strong>Editar:</strong> una vez abierto, puedes añadir tus configuraciones
            personalizadas, como inicializar <InlineCode
              code="oh-my-posh"
              lang="plaintext"
            />.
          </ListItem>
        </List>
      </Explanation>

      <p>
        Dentro del archivo, agrega la siguiente línea para inicializar Oh My
        Posh con tu tema preferido:
      </p>

      <PowerShellBlock
        code={`
              oh-my-posh init pwsh --config "$env:POSH_THEMES_PATH\\emodipt-extend.omp.json" |
                  Invoke-Expression
            `}
      >
        <Fragment slot="title">Inicialización automática</Fragment>
      </PowerShellBlock>

      <p>
        Guarda el archivo y reinicia la terminal. Para una personalización más
        completa, revisa la
        <Link href="https://ohmyposh.dev/docs/installation/customize">
          documentación oficial
        </Link>.
      </p>
    </More>
  </NotesSection>

  <Note>
    <span slot="title">Accesibilidad</span>

    Si usas un lector de pantalla o tienes alguna necesidad particular respecto
    al entorno de desarrollo, por favor comunícalo para que podamos ayudarte a
    configurar una alternativa accesible.
  </Note>
</NotesLayout>
