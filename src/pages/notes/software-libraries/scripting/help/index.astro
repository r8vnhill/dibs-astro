---
import * as icons from "~/assets/img/icons";
import { Heading, P } from "~/components/semantics";
import { Abstract, Explanation, Info, More, Note, Tip, Warning } from "~/components/ui/callouts";
import Question from "~/components/ui/callouts/Question.astro";
import { PowerShellBlock, PowerShellInline } from "~/components/ui/code";
import { B, I, Mono } from "~/components/ui/font";
import { List, ListItem } from "~/components/ui/list";
import { AuthorList, Book, References } from "~/components/ui/references";
import ConclusionsLayout from "~/layouts/ConclusionsLayout.astro";
import NotesLayout from "~/layouts/NotesLayout.astro";
import NotesSection from "~/layouts/NotesSection.astro";
---

<NotesLayout title="PowerShell: Descubrimiento y ayuda integrada" description="Definir descripción">
    <Abstract>
        <P>
            Esta lección introduce las herramientas de <B>autodescubrimiento</B> de PowerShell: cómo usar
            <PowerShellInline code="Get-Command" /> para explorar el entorno y <PowerShellInline code="Get-Help" /> para
            aprender directamente desde la terminal. A través de estos comandos podrás encontrar cmdlets, entender sus
            parámetros y acceder a ejemplos sin depender de documentación externa.
        </P>

        <P>
            También aprenderás a identificar patrones en la convención <I>Verbo-Sustantivo</I> y consultar temas
            conceptuales <Mono>about_*</Mono>. Estas prácticas te permitirán navegar y ampliar el ecosistema de
            PowerShell con autonomía, adoptando una mentalidad exploratoria centrada en descubrir antes que memorizar.
        </P>
    </Abstract>

    <NotesSection id="h2-get-command">
        <Heading
            headingLevel="h2" Icon={icons.MagnifyingGlass}
            slot="heading"
        >
            Buscar y explorar comandos con <Mono>Get-Command</Mono>
        </Heading>

        <P>
            <PowerShellInline code="Get-Command" /> sirve para <I>descubrir qué existe</I> en tu entorno PowerShell:
            cmdlets, funciones, scripts o alias. Puedes filtrar por <B>nombre, verbo o sustantivo</B>, usar comodines y
            explorar las acciones disponibles sin recordar nombres exactos.
        </P>

        <PowerShellBlock
            code={`
                $cmd = Get-Command Get-Command
                Get-Member -InputObject $cmd
                Get-Command -Verb Push
                Get-Command -Noun *Item

                # Cuando no recuerdes el nombre exacto
                Get-Command *location*  # Buscar comandos relacionados con "location"
          `}
        >
            <Fragment slot="title">Desde la terminal</Fragment>
            <span slot="footer">Explorar comandos disponibles</span>
        </PowerShellBlock>

        <Explanation>
            <List>
                <ListItem icon={icons.Terminal}>
                    <PowerShellInline code="Get-Command Get-Command" /> devuelve un objeto
                    <PowerShellInline code="[CommandInfo]" />, que puedes inspeccionar para conocer sus propiedades. Por
                    ejemplo, <PowerShellInline code="(Get-Command Get-Command).Parameters.Keys" /> lista sus parámetros.
                </ListItem>

                <ListItem icon={icons.BracketsCurly}>
                    <PowerShellInline code="Get-Member" /> muestra los <I>miembros</I> (propiedades y métodos) del
                    objeto devuelto. Si haces <PowerShellInline code="Get-Member -InputObject $cmd" />, verás a qué tipo
                    pertenece (<PowerShellInline code="[FunctionInfo]" /> o <PowerShellInline code="[CmdletInfo]" />) y
                    propiedades como <PowerShellInline code="Name" />, <PowerShellInline code="ModuleName" /> o
                    <PowerShellInline code="Definition" />.
                </ListItem>

                <ListItem icon={icons.Funnel}>
                    <B>Filtrado por verbo y sustantivo</B>
                    (<PowerShellInline code="-Verb" /> / <PowerShellInline code="-Noun" />). PowerShell nombra cmdlets
                    como <I>Verbo-Sustantivo</I>
                    (<PowerShellInline code="Get-Item" />, <PowerShellInline code="Push-Location" />, etc.).
                    <PowerShellInline code="-Verb" /> lista acciones (“qué hace”) y
                    <PowerShellInline code="-Noun" /> el “sobre qué”. Ejemplos:
                    <PowerShellInline code="Get-Command -Verb Push" /> o
                    <PowerShellInline code="Get-Command -Noun *Item" />.
                </ListItem>

                <ListItem icon={icons.Asterisk}>
                    <B>Comodines</B>: usa <PowerShellInline code="*" /> para buscar sin recordar el nombre exacto.
                    <PowerShellInline code="Get-Command *location*" /> encuentra
                    <PowerShellInline code="Get-Location" />,
                    <PowerShellInline code="Set-Location" />,
                    <PowerShellInline code="Push-Location" />, etc. Es insensible a mayúsculas y puedes combinar
                    filtros, por ejemplo:
                    <PowerShellInline
                        code="Get-Command *item* -CommandType Cmdlet -Module Microsoft.PowerShell.Management"
                    />.
                </ListItem>
            </List>
        </Explanation>

        <Tip Icon={icons.Lightbulb}>
            <Fragment slot="title">Adopta la convención <Mono>Verbo-Sustantivo</Mono></Fragment>
            <P>
                Nombra tus funciones y scripts como <Mono>Verbo-Sustantivo</Mono>. Así <PowerShellInline
                    code="Get-Command"
                /> y la ayuda integrada podrán <I>descubrir</I> tus comandos fácilmente.
            </P>
        </Tip>
    </NotesSection>

    <NotesSection id="h2-get-help">
        <Heading
            headingLevel="h2" Icon={icons.BookOpen}
            slot="heading"
        >
            Consultar documentación y ejemplos con <Mono>Get-Help</Mono>
        </Heading>

        <P>
            <PowerShellInline code="Get-Help" /> muestra la documentación integrada de cualquier comando. Es la
            herramienta principal para <B>entender cómo usar un cmdlet</B>: sus
            <I>parámetros, ejemplos y vínculos a la documentación en línea</I>. También incluye capítulos conceptuales
            llamados <Mono>about_*</Mono>.
        </P>

        <Info>
            <Fragment slot="title">Antes de comenzar</Fragment>
            <P>
                Si es la primera vez que usas PowerShell, puede que necesites descargar o actualizar la ayuda local con
                <PowerShellInline code="Update-Help" />. Esto permite usar
                <PowerShellInline code="Get-Help" /> sin conexión.
            </P>

            <PowerShellBlock code={`
                Update-Help -UICulture en-US
            `}>
                <Fragment slot="title">Desde la terminal</Fragment>
                <span slot="footer">Actualizar ayuda local en inglés (en-US)</span>
            </PowerShellBlock>

            <Warning>
                <Fragment slot="title">Idiomas disponibles</Fragment>
                <P>
                    Usamos <Mono>en-US</Mono> porque es el idioma por defecto de PowerShell. Puedes cambiarlo a otro
                    idioma (por ejemplo, <Mono>es-ES</Mono>), pero ten en cuenta que no todos los módulos tienen
                    traducción disponible. Si intentas actualizar todos los módulos en español, el proceso puede fallar.
                </P>
            </Warning>
        </Info>

        <PowerShellBlock
            code={`
                # Ayuda rápida (resumen, parámetros y ejemplos)
                Get-Help Get-Help
                Get-Help Get-ChildItem -Examples
                Get-Help Get-Command -Full

                # Abrir documentación en el navegador (si está disponible)
                Get-Help Get-ChildItem -Online

                # Explorar temas conceptuales ("about_*")
                Get-Help about_Comparison_Operators
                Get-Help about_*    # Todos los temas disponibles
            `}
        >
            <Fragment slot="title">Desde la terminal</Fragment>
            <span slot="footer">Consultar ayuda y documentación</span>
        </PowerShellBlock>

        <Explanation>
            <List>
                <ListItem icon={icons.FileText}>
                    <PowerShellInline code="Get-Help Get-Help" /> — Muestra la ayuda del propio cmdlet <PowerShellInline
                        code="Get-Help"
                    />: estructura de la salida, parámetros disponibles y cómo profundizar (por ejemplo, con
                    <PowerShellInline code="-Examples" /> o <PowerShellInline code="-Full" />).
                </ListItem>

                <ListItem icon={icons.FileText}>
                    <PowerShellInline code="-Examples" /> — Presenta solo los ejemplos prácticos del comando. Es la
                    forma más rápida de ver usos reales sin leer toda la documentación.
                </ListItem>

                <ListItem icon={icons.FileText}>
                    <PowerShellInline code="-Full" /> — Muestra la documentación completa: descripción, sintaxis,
                    parámetros (con tipos y validaciones), entradas/salidas y notas adicionales.
                </ListItem>

                <ListItem icon={icons.Globe}>
                    <PowerShellInline code="-Online" /> — Abre el artículo correspondiente en Microsoft Learn/Docs en el
                    navegador, útil cuando quieres ver formato enriquecido o notas actualizadas.
                </ListItem>

                <ListItem icon={icons.Bookmark}>
                    <Mono>about_*</Mono> — Temas conceptuales del lenguaje y la plataforma (pipeline, operadores, alias,
                    etc.).
                </ListItem>

                <ListItem icon={icons.MagnifyingGlass}>
                    <B>Comodines</B> — Cuando no recuerdes el nombre exacto, usa <PowerShellInline code="*" /> para
                    buscar candidatos.
                </ListItem>
            </List>
        </Explanation>

        <Note>
            En este apunte no documentaremos formalmente los scripts: priorizaremos explicaciones en línea y ejemplos
            prácticos. Si quieres aprender a incluir documentación interna en tus propios scripts, revisa la sección
            <I>Comment-Based Help</I> más abajo.
        </Note>

        <More>
            <span slot="title">Ayuda basada en comentarios (Comment-Based Help)</span>

            <PowerShellBlock
                code={`
                    <#
                    .SYNOPSIS
                        Breve descripción del script.
                    .DESCRIPTION
                        Explicación más detallada del script.
                    .PARAMETER Path
                        Descripción del parámetro.
                    .EXAMPLE
                        Ejemplo de uso del script.
                    #>
                    param($Path)
                `}
            >
                <Fragment slot="title">Plantilla para ayuda basada en comentarios</Fragment>
                <span slot="footer">
                    Documentación oficial:
                    <Mono
                        href="https://learn.microsoft.com/en-us/powershell/module/microsoft.powershell.core/about/about_comment_based_help/"
                    >
                        about_Comment_Based_Help
                    </Mono>
                </span>
                <Fragment slot="source">path/to/script.ps1</Fragment>
            </PowerShellBlock>

            <PowerShellBlock
                code={`
                    # Mostrar ayuda integrada en un script
                    Get-Help .\\path\\to\\script.ps1 -Full
                `}
            >
                <Fragment slot="title">Desde la terminal</Fragment>
                <span slot="footer">Leer ayuda integrada en un script</span>
            </PowerShellBlock>

            <Tip>
                <P>
                    Añadir ayuda a tus scripts no solo facilita su uso futuro, también permite a otras personas usar
                    <PowerShellInline code="Get-Help" /> directamente sobre tus archivos sin abrir el código.
                </P>
            </Tip>
        </More>
    </NotesSection>

    <Question>
        Encuentra tres cmdlets que empiecen con <Mono>Get-</Mono> y tengan <I>Noun</I> <Mono>Item</Mono>. Usa
        <PowerShellInline code="Get-Help" /> para ver sus ejemplos de uso.
    </Question>

    <ConclusionsLayout>
        <Fragment slot="conclusions">
            En esta lección aprendiste a <B>autodescubrir PowerShell</B> desde la terminal. Comprendiste cómo
            <PowerShellInline code="Get-Command" /> te permite explorar los cmdlets disponibles, filtrar por verbo o
            sustantivo, e inspeccionar sus propiedades; y cómo <PowerShellInline code="Get-Help" /> ofrece documentación
            integrada, ejemplos y temas conceptuales <Mono>about_*</Mono> para profundizar sin salir del entorno.
            También viste cómo agregar ayuda a tus propios scripts mediante comentarios estructurados, facilitando su
            reutilización y comprensión a largo plazo.
        </Fragment>

        <Fragment slot="key-points">
            <ListItem icon={icons.MagnifyingGlass}>
                <PowerShellInline code="Get-Command" /> descubre qué comandos existen y permite filtrarlos por nombre,
                verbo o sustantivo.
            </ListItem>

            <ListItem icon={icons.BookOpen}>
                <PowerShellInline code="Get-Help" /> explica cómo usar cada comando, muestra ejemplos y abre
                documentación en línea.
            </ListItem>

            <ListItem icon={icons.Bookmark}>
                Los temas <Mono>about_*</Mono> contienen guías conceptuales sobre operadores, alias, pipeline y otros
                fundamentos.
            </ListItem>

            <ListItem icon={icons.FileText}>
                La ayuda basada en comentarios permite documentar tus propios scripts y acceder a esa información desde
                la terminal.
            </ListItem>
        </Fragment>

        <Fragment slot="takeaways">
            PowerShell está pensado para el <I>descubrimiento progresivo</I>: cada herramienta revela pistas sobre la
            siguiente. Conocer y usar <PowerShellInline code="Get-Command" /> y <PowerShellInline code="Get-Help" /> no
            solo te vuelve más independiente, sino que te enseña a aprender desde la propia terminal. En lugar de
            memorizar comandos, adoptas una mentalidad exploratoria, apoyada en documentación viva y accesible. A partir
            de aquí, cada nuevo script o módulo que escribas puede —y debería— incluir su propia ayuda integrada,
            formando parte de ese ecosistema de aprendizaje continuo.
        </Fragment>
    </ConclusionsLayout>

    <References>
        <Fragment slot="recommended">
            <Book
                chapter="Using the help system"
                bookTitle="Learn PowerShell in a month of lunches, fourth edition: Covers windows, linux, and MacOS"
                pages={[25, 41]}
            >
                <AuthorList slot="authors" authors={[{ firstName: "Travis", lastName: "Plunk" }]} />

                <Fragment slot="description">
                    Presenta el sistema de ayuda de PowerShell como la clave de su <I>descubribilidad</I>. Explica cómo
                    <B>actualizar la ayuda</B> (<PowerShellInline code={`Update-Help`} />, <PowerShellInline
                        code={`Save-Help`}
                    />), las diferencias entre <PowerShellInline code={`Help`} /> y <PowerShellInline
                        code={`Get-Help`}
                    /> (incluido el paginado y <PowerShellInline code={`-Online`} />), y cómo usar comodines para <B
                    >encontrar comandos</B> desde la propia terminal. Enseña a <B>interpretar la ayuda</B>: <I>parameter
                        sets</I>, parámetros <B>obligatorios/opcionales</B>, <B>posicionales</B>, tipos y arrays, y <B
                    >switches</B> como <PowerShellInline code={`-Force`} />. Muestra cómo extraer <B>ejemplos</B> con
                    <PowerShellInline code={`-Examples`} /> y cómo consultar temas conceptuales <Mono>about_</Mono> (por
                    ejemplo, <Mono>about_CommonParameters</Mono>). Cierra con ejercicios prácticos que te obligan a
                    resolver tareas usando la ayuda, reforzando la idea de <I>aprender a aprender</I> dentro de
                    PowerShell en lugar de memorizar comandos o depender del buscador. Ideal si quieres ganar autonomía
                    para descubrir cmdlets, entender su sintaxis real y documentarte sin salir de la terminal.
                </Fragment>
            </Book>
        </Fragment>

        {
            /*
               <Fragment slot="additional">
                   ...
               </Fragment>
            */
        }
    </References>
</NotesLayout>
