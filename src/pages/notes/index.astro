---
import TreeStructure from "~/assets/img/icons/tree-structure.svg";
import Package from "~/assets/img/icons/package.svg";
import TerminalWindow from "~/assets/img/icons/terminal-window.svg";
import * as icons from "~/assets/img/icons";

import TableFloat from "~/components/floats/TableFloat.astro";
import Heading from "~/components/semantics/Heading.astro";
import Abstract from "~/components/ui/callouts/Abstract.astro";
import Important from "~/components/ui/callouts/Important.astro";
import More from "~/components/ui/callouts/More.astro";
import Note from "~/components/ui/callouts/Note.astro";
import InlineCode from "~/components/ui/code/InlineCode.astro";
import ToDo from "~/components/utils/ToDo";

import NotesLayout from "~/layouts/NotesLayout.astro";
import List from "~/components/ui/list/List.astro";
import ListItem from "~/components/ui/list/ListItem.astro";

const title = "¿Cómo usar este apunte?";
---

<NotesLayout title={title}>
  <Abstract headingLevel="h2" class="mt-6">
    <p>
      Este apunte sirve como guía de referencia rápida y complemento a las
      clases. Está diseñado para ayudarte a profundizar en los temas cuando lo
      necesites.
    </p>
    <p>
      Aquí encontrarás explicaciones detalladas, ejemplos ilustrativos y
      problemas prácticos que facilitarán tu aprendizaje. Aunque las clases
      (diapositivas) suelen ser suficientes para comprender los conceptos, este
      apunte ofrece una mirada más profunda para reforzar y aplicar lo
      aprendido.
    </p>
  </Abstract>

  <Important title="Mejor en pantallas grandes">
    El sitio está pensado principalmente para usarse en computadoras. Aunque
    tratamos de que funcione bien en dispositivos móviles, algunos contenidos
    pueden no adaptarse del todo a pantallas pequeñas.
  </Important>

  <section title="Estructura del apunte">
    <Heading Icon={TreeStructure} headingLevel="h2"
      >Estructura del apunte</Heading
    >

    <p class="mb-4">
      Cada apunte está organizado en lecciones que abordan un tema específico de
      forma gradual y práctica. Cada lección puede incluir distintas secciones,
      diseñadas para apoyar diversos estilos de aprendizaje:
    </p>

    <TableFloat caption="Secciones comunes que puede contener una lección.">
      <table
        class="not-prose w-full table-auto border-collapse text-sm sm:text-base"
      >
        <thead>
          <tr
            class="border-b border-gray-500/30 dark:border-gray-500/20 text-left"
          >
            <th scope="col" class="pb-2 pr-4 font-semibold">📌 Sección</th>
            <th scope="col" class="pb-2 font-semibold">📖 Contenido</th>
          </tr>
        </thead>
        <tbody class="divide-y divide-gray-300/20 dark:divide-gray-600/20">
          <tr>
            <td class="py-2 pr-4 font-semibold">Conceptos</td>
            <td class="py-2"
              >Explicaciones detalladas de los temas clave y su motivación.</td
            >
          </tr>
          <tr>
            <td class="py-2 pr-4 font-semibold">Ejemplos</td>
            <td class="py-2"
              >Fragmentos de código que ilustran cómo aplicar lo aprendido.</td
            >
          </tr>
          <tr>
            <td class="py-2 pr-4 font-semibold">Ejercicios</td>
            <td class="py-2"
              >Problemas para poner en práctica los conceptos estudiados.</td
            >
          </tr>
          <tr>
            <td class="py-2 pr-4 font-semibold">Soluciones</td>
            <td class="py-2"
              >Explicaciones y respuestas a los ejercicios propuestos.</td
            >
          </tr>
          <tr>
            <td class="py-2 pr-4 font-semibold">Referencias</td>
            <td class="py-2"
              >Recursos adicionales para profundizar el estudio.</td
            >
          </tr>
          <tr>
            <td class="py-2 pr-4 font-semibold">Ejemplos en otros lenguajes</td>
            <td class="py-2"
              >Comparaciones entre Kotlin y otros lenguajes de programación.</td
            >
          </tr>
        </tbody>
      </table>
    </TableFloat>

    <Note>
      No todas las secciones estarán presentes en todas las lecciones: el
      contenido se adapta a cada tema.
    </Note>
  </section>

  <section title="cajita == opcional">
    <Heading Icon={Package} headingLevel="h2">
      <span class="sr-only">Contenido opcional</span>
      <InlineCode lang="kt" code="cajita == opcional" />
    </Heading>

    <p>Todo lo que esté en una caja como la siguiente:</p>

    <More title="es opcional">
      Soy una cajita opcional, gracias por leerme c:
    </More>
  </section>

  <section title="¿Por qué usamos scripts para tareas simples?">
    <Heading Icon={TerminalWindow} headingLevel="h2">
      ¿Por qué usamos scripts para tareas simples?
    </Heading>

    A lo largo de estos apuntes encontrarás scripts que, a primera vista,
    podrían parecer innecesarios. Muchas tareas se pueden resolver con un par de
    líneas en la terminal. Sin embargo, preferimos scripts más detallados por
    razones <b>didácticas y prácticas</b>.

    <section title="Valor didáctico">
      <Heading Icon={icons.Student} headingLevel="h3">Valor didáctico</Heading>

      <List>
        <ListItem icon={icons.ListNumbers}>
          Permite <b>mostrar cada paso de forma clara y controlada</b>.
        </ListItem>

        <ListItem icon={icons.Terminal} class="flex flex-col items-start gap-2">
          <div class="flex items-center gap-2">
            Introduce gradualmente conceptos clave de scripting:
          </div>
          <List nested class="mt-1">
            <ListItem icon={icons.SlidersHorizontal}>
              Validación de parámetros.
            </ListItem>
            <ListItem icon={icons.ChatText}>
              Mensajes informativos (<InlineCode lang="sh" code="echo" />, <InlineCode
                lang="ps"
                code="Write-Verbose"
              />, etc.).
            </ListItem>
            <ListItem icon={icons.WarningCircle}>
              Manejo de errores con <InlineCode lang="ps" code="try/catch" /> en
              PowerShell o <InlineCode lang="sh" code="set -e" />, <InlineCode
                lang="sh"
                code="trap"
              /> en Bash.
            </ListItem>
          </List>
        </ListItem>

        <ListItem icon={icons.CheckCircle}>
          Refuerza buenas prácticas útiles para la automatización de tareas más
          complejas.
        </ListItem>
      </List>
    </section>

    <section>
      <Heading Icon={icons.PuzzlePiece} headingLevel="h3">
        Útil para el desarrollo de bibliotecas
      </Heading>

      <p>
        En el desarrollo de bibliotecas reutilizables, especialmente cuando se
        integran múltiples herramientas, es común enfrentar <b
          >casos no cubiertos por los sistemas de construcción</b
        > (como Gradle o npm). En esos casos, los scripts permiten:
      </p>

      <List>
        <ListItem icon={icons.Sliders}>
          <b>Personalizar el proceso de construcción</b> según las necesidades específicas
          del proyecto.
        </ListItem>
        <ListItem icon={icons.PlugsConnected}>
          <b>Integrar herramientas externas</b> que no están directamente soportadas
          por el sistema de construcción principal.
        </ListItem>
        <ListItem icon={icons.GearSix}>
          <b>Automatizar tareas auxiliares</b>, como validaciones previas,
          configuraciones iniciales o pasos de instalación personalizada.
        </ListItem>
        <ListItem icon={icons.Repeat}>
          <b>Hacer los procesos reproducibles</b> y fáciles de seguir.
        </ListItem>
        <ListItem icon={icons.ShieldCheck}>
          <b>Reducir errores</b> al minimizar instrucciones manuales.
        </ListItem>
      </List>
    </section>
  </section>

  <ToDo
    metadata={{
      title,
    }}
    client:only="react"
  />
</NotesLayout>
